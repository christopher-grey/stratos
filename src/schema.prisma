datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  firstName String?
  lastName  String?
  role      Role     @default(USER)
  posts     Post[]
  layers    Layers[]
  private   Boolean
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  anonymity Boolean

}

model Comments {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  anonymity Boolean
}

model post_likes {
    id        Int      @id @default(autoincrement())
    author    User?    @relation(fields: [authorId], references: [id])
    Post      id        Int      @id @default(autoincrement())
}
model comment_likes {
    id        Int      @id @default(autoincrement())
    author    User?    @relation(fields: [authorId], references: [id])
    Post      id        Int      @id @default(autoincrement())
}
model followed_tags {
    author    User?    @relation(fields: [authorId], references: [id])
    Tag      id        Int      @id @default(autoincrement())
}
model connections {
    author    User1?    @relation(fields: [authorId], references: [id])
    author    User2?    @relation(fields: [authorId], references: [id])
}

model view_profile {
  Date DateTime @default(now())
  Viewer    User?    @relation(fields: [authorId], references: [id])
  User    User?    @relation(fields: [authorId], references: [id])
  anonymity Boolean
}


model Layers {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  anonymity Boolean
}

enum Role {
  USER
  ADMIN
}